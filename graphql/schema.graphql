"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")


scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
extend type Query {
    trainingweek(id: ID! @eq): Trainingweek @find
    trainingweeks(type: String @eq): [Trainingweek!]! @paginate(defaultCount: 10)
}
type Trainingweek{
    id: ID!
    employee_id: ID!
    week_no: Int!
    status: String!
    start_date:Date
    end_date:Date
    created_at: DateTime
    updated_at: DateTime
}

extend type Mutation {
    createTrainingweek(
        employee_id: ID!
        week_no: Int!
        status: String!
        start_date:Date
        end_date:Date
    ): Trainingweek! @create
    updateTrainingweek(
        id: ID!
        employee_id: ID!
        week_no: Int!
        status: String!
        start_date:DateTime
        end_date:DateTime
    ): Trainingweek! @update
    deleteTrainingweek(id: ID! @eq): Trainingweek! @delete

}

    # "Indicates what fields are available at the top level of a query operation."
# type Query {"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."

#     "Find a single user by an identifying attribute."
#     user(
#       "Search by primary key."
#       id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

#       "Search by email address."
#       email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
#     ): User @find

#     "List multiple users."
#     users(
#       "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
#       name: String @where(operator: "like")
#     ): [User!]! @paginate(defaultCount: 10)
# }

# "Account of a person who utilizes this application."
# type User {
#     "Unique primary key."
#     id: ID!

#     "Non-unique name."
#     name: String!

#     "Unique email address."
#     email: String!

#     "When the email was verified."
#     email_verified_at: DateTime

#     "When the account was created."
#     created_at: DateTime!

#     "When the account was last updated."
#     updated_at: DateTime!
# }
